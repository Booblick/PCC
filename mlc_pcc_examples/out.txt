EXITING BACKTRACK: Jump too small (alamin=1.0607180554651243E-7). Exiting and using xold. Value=-2760.223592044613
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0598675304608122E-7). Exiting and using xold. Value=-2760.3026535542817
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0597748570459807E-7). Exiting and using xold. Value=-2760.3796384823136
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0597787461700012E-7). Exiting and using xold. Value=-2760.365712120598
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0603758882330713E-7). Exiting and using xold. Value=-2760.3140136972024
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.011253388583443871). Exiting and using xold. Value=-2734.628930178909
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0607182958571745E-7). Exiting and using xold. Value=-2734.628930178909
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010930438604212686). Exiting and using xold. Value=-2735.410895030572
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.05989005455517E-7). Exiting and using xold. Value=-2735.410895030572
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010719915839663755). Exiting and using xold. Value=-2736.172033282095
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0598212051275889E-7). Exiting and using xold. Value=-2736.172033282095
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010759659899818187). Exiting and using xold. Value=-2736.0343028283824
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0598203029263679E-7). Exiting and using xold. Value=-2736.0343028283824
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010943880052561463). Exiting and using xold. Value=-2735.523170786808
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0604048951119043E-7). Exiting and using xold. Value=-2735.523170786808
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3061851550375278E-7). Exiting and using xold. Value=-2510.8329552669625
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.2748048352320463E-7). Exiting and using xold. Value=-2517.7044182524983
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.281121326268398E-7). Exiting and using xold. Value=-2524.3243898118544
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.2829678560891636E-7). Exiting and using xold. Value=-2523.1206980547795
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.2997599793028296E-7). Exiting and using xold. Value=-2518.649518844441
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0533578080031595E-7). Exiting and using xold. Value=-2875.374364090077
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0525573819982752E-7). Exiting and using xold. Value=-2875.4941903497315
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0528640538914304E-7). Exiting and using xold. Value=-2875.496843265666
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0529687977993755E-7). Exiting and using xold. Value=-2875.5568974589833
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0529598969043676E-7). Exiting and using xold. Value=-2875.449525688391
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010564585545010339). Exiting and using xold. Value=-2856.6809165170516
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0534809951154353E-7). Exiting and using xold. Value=-2856.6809165170516
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.01040017216111755). Exiting and using xold. Value=-2857.8672271130376
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0526930463452939E-7). Exiting and using xold. Value=-2857.8672271130376
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010423813842978387). Exiting and using xold. Value=-2857.893333196362
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0530057746747397E-7). Exiting and using xold. Value=-2857.893333196362
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0104652101839322). Exiting and using xold. Value=-2858.487862756905
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0531030057482183E-7). Exiting and using xold. Value=-2858.487862756905
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010490250395373994). Exiting and using xold. Value=-2857.424985614428
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0531105248241924E-7). Exiting and using xold. Value=-2857.424985614428
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.2809555417917688E-7). Exiting and using xold. Value=-2690.5995897057624
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.271274212132471E-7). Exiting and using xold. Value=-2701.153057336812
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.2713102595957074E-7). Exiting and using xold. Value=-2701.3651967806395
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.266398576561491E-7). Exiting and using xold. Value=-2706.626625756522
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.2812378604666911E-7). Exiting and using xold. Value=-2697.199862343854
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0549245424594113E-7). Exiting and using xold. Value=-2875.200830892826
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0549710051003689E-7). Exiting and using xold. Value=-2875.2379796191767
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0554641824634356E-7). Exiting and using xold. Value=-2875.2069836694445
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0548787844654699E-7). Exiting and using xold. Value=-2875.2000508954484
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0542152893758574E-7). Exiting and using xold. Value=-2875.1876890241233
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.011111287839470097). Exiting and using xold. Value=-2854.9616324353324
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0550225165911896E-7). Exiting and using xold. Value=-2854.9616324353324
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.011067587860320785). Exiting and using xold. Value=-2855.3292986572915
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0550665985375294E-7). Exiting and using xold. Value=-2855.3292986572915
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010968630347454711). Exiting and using xold. Value=-2855.0225362693923
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0555928725774299E-7). Exiting and using xold. Value=-2855.0225362693923
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.011031476858193999). Exiting and using xold. Value=-2854.953951960155
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0549878116751631E-7). Exiting and using xold. Value=-2854.953951960155
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.011018707443369658). Exiting and using xold. Value=-2854.8316124615385
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0543342087868778E-7). Exiting and using xold. Value=-2854.8316124615385
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.30247276771574E-7). Exiting and using xold. Value=-2675.1303411524746
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.296148176302648E-7). Exiting and using xold. Value=-2678.3818858248014
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.300989240438336E-7). Exiting and using xold. Value=-2675.7201130381704
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.2991908710292375E-7). Exiting and using xold. Value=-2675.0962727347655
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3041791165569942E-7). Exiting and using xold. Value=-2674.020132889106
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0750049048754136E-7). Exiting and using xold. Value=-2634.181429676453
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0761159575890515E-7). Exiting and using xold. Value=-2634.0334243178795
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0765741861362404E-7). Exiting and using xold. Value=-2634.116443639145
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.075827052801971E-7). Exiting and using xold. Value=-2634.0036138418486
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.074977839121251E-7). Exiting and using xold. Value=-2634.1092374219834
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010511217911445566). Exiting and using xold. Value=-2612.082928465812
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0749874340760756E-7). Exiting and using xold. Value=-2612.082928465812
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010736157915391975). Exiting and using xold. Value=-2610.62137768261
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0760557421966546E-7). Exiting and using xold. Value=-2610.62137768261
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.01063106064737768). Exiting and using xold. Value=-2611.441282771765
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0765235876425739E-7). Exiting and using xold. Value=-2611.441282771765
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010740148799533807). Exiting and using xold. Value=-2610.3269986408663
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0757746945533114E-7). Exiting and using xold. Value=-2610.3269986408663
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.010618263423664263). Exiting and using xold. Value=-2611.3702561166647
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0749403818427164E-7). Exiting and using xold. Value=-2611.3702561166647
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.478457108513809E-7). Exiting and using xold. Value=-2419.9930240642548
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.523346829363099E-7). Exiting and using xold. Value=-2407.398725725497
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.501610545120521E-7). Exiting and using xold. Value=-2414.4610999027936
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.530029892455046E-7). Exiting and using xold. Value=-2404.8874316693514
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4948717222046379E-7). Exiting and using xold. Value=-2413.8616065980373
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0556429884300008E-7). Exiting and using xold. Value=-2874.3177289176456
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0557340334978596E-7). Exiting and using xold. Value=-2874.271762832352
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0561256356597862E-7). Exiting and using xold. Value=-2874.300675240305
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0548424801575839E-7). Exiting and using xold. Value=-2874.3442148670824
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0553957509123793E-7). Exiting and using xold. Value=-2874.235384395522
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.01404969673776233). Exiting and using xold. Value=-2846.219287098745
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0555608561786224E-7). Exiting and using xold. Value=-2846.219287098745
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.014245566365111139). Exiting and using xold. Value=-2845.764462913058
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0556339788816889E-7). Exiting and using xold. Value=-2845.764462913058
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.014192385962361359). Exiting and using xold. Value=-2846.0504112724207
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0560201965866728E-7). Exiting and using xold. Value=-2846.0504112724207
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.013872777338242536). Exiting and using xold. Value=-2846.4818478634556
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.054784843332267E-7). Exiting and using xold. Value=-2846.4818478634556
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.014479373079184218). Exiting and using xold. Value=-2845.40447974859
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0552863064826318E-7). Exiting and using xold. Value=-2845.40447974859
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.436701088337126E-7). Exiting and using xold. Value=-2597.7569945004207
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4364984002560657E-7). Exiting and using xold. Value=-2593.7942961845424
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.442659320945665E-7). Exiting and using xold. Value=-2596.242750527411
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4178311804009343E-7). Exiting and using xold. Value=-2600.1183835547854
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.440114466943578E-7). Exiting and using xold. Value=-2590.6162819277106
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.05338342330315E-7). Exiting and using xold. Value=-2874.0334942780946
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.052651793375348E-7). Exiting and using xold. Value=-2874.062189952958
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0529804052635667E-7). Exiting and using xold. Value=-2873.8805515128824
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0525812156205367E-7). Exiting and using xold. Value=-2874.0941580896792
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0528843304773766E-7). Exiting and using xold. Value=-2873.876615688449
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.015229329372376484). Exiting and using xold. Value=-2843.407668422671
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0532774798401716E-7). Exiting and using xold. Value=-2843.407668422671
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.015008765999018103). Exiting and using xold. Value=-2843.691637715202
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0525660914718478E-7). Exiting and using xold. Value=-2843.691637715202
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.016494249131933043). Exiting and using xold. Value=-2841.893697401656
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0528135429019274E-7). Exiting and using xold. Value=-2841.893697401656
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.014784336511190448). Exiting and using xold. Value=-2844.008083760633
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0525072773020508E-7). Exiting and using xold. Value=-2844.008083760633
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.016542332847443393). Exiting and using xold. Value=-2841.854851502116
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.052732806875804E-7). Exiting and using xold. Value=-2841.854851502116
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3248141826589308E-7). Exiting and using xold. Value=-2573.48425832713
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3192673023760506E-7). Exiting and using xold. Value=-2575.975578526908
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.333746903711812E-7). Exiting and using xold. Value=-2560.1750728141615
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3158571540936565E-7). Exiting and using xold. Value=-2578.7582322470107
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3305422215169357E-7). Exiting and using xold. Value=-2559.8352865822735
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0572088347755099E-7). Exiting and using xold. Value=-2873.1533051505053
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0557343350939538E-7). Exiting and using xold. Value=-2873.2409063176756
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0559158024383518E-7). Exiting and using xold. Value=-2873.140128646192
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0558399490243742E-7). Exiting and using xold. Value=-2873.164020452198
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0572142409512945E-7). Exiting and using xold. Value=-2873.1168648624557
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.02984292309069961). Exiting and using xold. Value=-2834.695522864074
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0558751070673492E-7). Exiting and using xold. Value=-2834.695522864074
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.02700820430419573). Exiting and using xold. Value=-2835.56257711522
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0547718905867811E-7). Exiting and using xold. Value=-2835.56257711522
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.03026360805592852). Exiting and using xold. Value=-2834.5651489462953
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0546948688877405E-7). Exiting and using xold. Value=-2834.5651489462953
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.029457280117801313). Exiting and using xold. Value=-2834.8015360923537
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0546837820700637E-7). Exiting and using xold. Value=-2834.8015360923537
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.031206774472508896). Exiting and using xold. Value=-2834.3347786430086
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0557402755255941E-7). Exiting and using xold. Value=-2834.3347786430086
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4303112638877093E-7). Exiting and using xold. Value=-2497.0654297649676
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4057312010940993E-7). Exiting and using xold. Value=-2504.6621705837215
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.396794332364386E-7). Exiting and using xold. Value=-2495.9407146212598
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4168926854829609E-7). Exiting and using xold. Value=-2497.9823463809166
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4356923547119613E-7). Exiting and using xold. Value=-2493.8993139402182
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0543125747880788E-7). Exiting and using xold. Value=-2873.32504882135
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0531652509695095E-7). Exiting and using xold. Value=-2873.411366846661
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0530740706726151E-7). Exiting and using xold. Value=-2873.3850740548687
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0526968548266011E-7). Exiting and using xold. Value=-2873.4269783198183
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.054179711539699E-7). Exiting and using xold. Value=-2873.3259009338876
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.02477020654926734). Exiting and using xold. Value=-2836.3955720604135
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0537031840984836E-7). Exiting and using xold. Value=-2836.3955720604135
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.02285536090931924). Exiting and using xold. Value=-2837.249967784546
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.052735167097576E-7). Exiting and using xold. Value=-2837.249967784546
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.02338455016826818). Exiting and using xold. Value=-2836.98975229214
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0526297164609771E-7). Exiting and using xold. Value=-2836.98975229214
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.022565692334974945). Exiting and using xold. Value=-2837.4044722454178
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.052320822589805E-7). Exiting and using xold. Value=-2837.4044722454178
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.02475810554382836). Exiting and using xold. Value=-2836.403906749005
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0535536904406232E-7). Exiting and using xold. Value=-2836.403906749005
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3462016235043225E-7). Exiting and using xold. Value=-2511.9828153904227
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3229938289588107E-7). Exiting and using xold. Value=-2519.4783830883016
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.316894221761411E-7). Exiting and using xold. Value=-2517.204431301313
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.324142494319416E-7). Exiting and using xold. Value=-2520.8180291620083
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3570974736304147E-7). Exiting and using xold. Value=-2512.0422077696167
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0561586563248683E-7). Exiting and using xold. Value=-2757.5251283776633
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0565462408262342E-7). Exiting and using xold. Value=-2757.5261622009643
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0562709982583212E-7). Exiting and using xold. Value=-2757.5363256217433
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0564852242091813E-7). Exiting and using xold. Value=-2757.5593793752605
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.056474419709102E-7). Exiting and using xold. Value=-2757.5039940437105
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5185561611968167E-7). Exiting and using xold. Value=-2707.9469401925335
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5356097222239052E-7). Exiting and using xold. Value=-2707.9571471638433
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5142771734272105E-7). Exiting and using xold. Value=-2708.057677475978
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5233563840576966E-7). Exiting and using xold. Value=-2708.2855420708092
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.591147189764152E-7). Exiting and using xold. Value=-2707.737859112127
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.1669326699861728E-7). Exiting and using xold. Value=-2279.4640263123624
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.1661492376476257E-7). Exiting and using xold. Value=-2279.5498490105956
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.1312196484935485E-7). Exiting and using xold. Value=-2280.4214980509905
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.0811499238579538E-7). Exiting and using xold. Value=-2282.377867459472
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.3538382946244338E-7). Exiting and using xold. Value=-2277.6474654322465
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.1769183607260187E-7). Exiting and using xold. Value=-2872.3610605601966
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0014323468740859873). Exiting and using xold. Value=-2872.3954102607604
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0506663910278848E-7). Exiting and using xold. Value=-2872.3954102607604
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0011172860897246475). Exiting and using xold. Value=-2872.3747079443333
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.05060429999507E-7). Exiting and using xold. Value=-2872.3747079443333
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.1310120057213404E-7). Exiting and using xold. Value=-2872.333502679298
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0014226961930297003). Exiting and using xold. Value=-2872.3949080089774
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0507252631664218E-7). Exiting and using xold. Value=-2872.3949080089774
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0025171609062670467). Exiting and using xold. Value=-2826.8539003787014
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.2648198592140493E-7). Exiting and using xold. Value=-2826.8539003787014
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.6530867212732873E-7). Exiting and using xold. Value=-2827.191151539986
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0012033516543828722). Exiting and using xold. Value=-2826.9846085342097
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0952893937040698E-7). Exiting and using xold. Value=-2826.9846085342097
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.127349084738502E-7). Exiting and using xold. Value=-2826.5810760237573
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.549211490085515E-7). Exiting and using xold. Value=-2827.1861355229958
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.9618390283238719E-7). Exiting and using xold. Value=-2428.510086122264
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.013097224979047E-7). Exiting and using xold. Value=-2431.4498011704795
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.0192304688068145E-7). Exiting and using xold. Value=-2429.6510347461985
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=2.0074229978266473E-7). Exiting and using xold. Value=-2426.134219547686
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.9265580938873036E-7). Exiting and using xold. Value=-2431.406207084504
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.090133508368362E-7). Exiting and using xold. Value=-2872.671434985918
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0782602877792318E-7). Exiting and using xold. Value=-2872.7435918859287
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.1172347174807245E-7). Exiting and using xold. Value=-2872.644196639506
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.1096431249538576E-7). Exiting and using xold. Value=-2872.644391243103
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0881420130272472E-7). Exiting and using xold. Value=-2872.6816528994464
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.069324971962253E-7). Exiting and using xold. Value=-2829.9260756639796
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0659723205758823E-7). Exiting and using xold. Value=-2830.640198982248
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0786732883177527E-7). Exiting and using xold. Value=-2829.656386444764
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.076019233489967E-7). Exiting and using xold. Value=-2829.6583097932207
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0687556235013775E-7). Exiting and using xold. Value=-2830.027129171481
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5166764276129744E-7). Exiting and using xold. Value=-2455.3697452809056
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5571431850651191E-7). Exiting and using xold. Value=-2461.6050964327146
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.64306559490413E-7). Exiting and using xold. Value=-2453.007589296599
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5796121321165278E-7). Exiting and using xold. Value=-2453.030364647992
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.5345864666616405E-7). Exiting and using xold. Value=-2456.2391501631937
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.0754455774635036E-7). Exiting and using xold. Value=-2876.195407380617
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0798006559169349E-7). Exiting and using xold. Value=-2876.199617724028
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0766221705619438E-7). Exiting and using xold. Value=-2876.1853808536116
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0864418773068256E-7). Exiting and using xold. Value=-2876.249191143796
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0809709111211241E-7). Exiting and using xold. Value=-2876.1826966418057
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.014652317598745019). Exiting and using xold. Value=-2864.808672059672
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0739094407847422E-7). Exiting and using xold. Value=-2864.808672059672
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.018397186095615775). Exiting and using xold. Value=-2864.850416686968
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0778271288215023E-7). Exiting and using xold. Value=-2864.850416686968
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.01453856241181304). Exiting and using xold. Value=-2864.709322649978
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0749523302285024E-7). Exiting and using xold. Value=-2864.709322649978
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.02010671269959313). Exiting and using xold. Value=-2865.341046983007
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.085480299362842E-7). Exiting and using xold. Value=-2865.341046983007
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.014940914880171055). Exiting and using xold. Value=-2864.6829755941408
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0790368336714715E-7). Exiting and using xold. Value=-2864.6829755941408
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0034082695231879754). Exiting and using xold. Value=-2762.6626855324325
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.00288836834686963). Exiting and using xold. Value=-2763.0449718712707
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0030488500947449147). Exiting and using xold. Value=-2761.7746591266723
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0028676887768994603). Exiting and using xold. Value=-2767.4214537815146
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0026945539730535003). Exiting and using xold. Value=-2761.5372991077393
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.083563048922029E-7). Exiting and using xold. Value=-2876.190793120172
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0874460209222678E-7). Exiting and using xold. Value=-2876.202432473568
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0814788731980498E-7). Exiting and using xold. Value=-2876.181724315715
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.093739809903369E-7). Exiting and using xold. Value=-2876.2386493950407
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0912415685378216E-7). Exiting and using xold. Value=-2876.176555960309
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.015190109112334375). Exiting and using xold. Value=-2864.7629388285827
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0815711113163284E-7). Exiting and using xold. Value=-2864.7629388285827
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.018972631349114834). Exiting and using xold. Value=-2864.8782728406236
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0855439407406575E-7). Exiting and using xold. Value=-2864.8782728406236
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.014865609199427827). Exiting and using xold. Value=-2864.673069426027
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.079546563397974E-7). Exiting and using xold. Value=-2864.673069426027
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.020383885918542264). Exiting and using xold. Value=-2865.236657253719
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0926492159320156E-7). Exiting and using xold. Value=-2865.236657253719
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.01551401166354907). Exiting and using xold. Value=-2864.6221414305473
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:252)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)
EXITING BACKTRACK: Jump too small (alamin=1.0888059523068935E-7). Exiting and using xold. Value=-2864.6221414305473
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.0034752705222572014). Exiting and using xold. Value=-2762.2274312566733
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.002867741571740407). Exiting and using xold. Value=-2763.2813637750883
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.003109862432747541). Exiting and using xold. Value=-2761.4308378509586
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.002868823280478652). Exiting and using xold. Value=-2766.4692794045345
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=0.00270037248155899). Exiting and using xold. Value=-2760.968005691825
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:232)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































EXITING BACKTRACK: Jump too small (alamin=1.097155756430865E-7). Exiting and using xold. Value=-2144.3449688063247
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0964434715377153E-7). Exiting and using xold. Value=-2144.274677781802
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0968079768766298E-7). Exiting and using xold. Value=-2144.3331370331766
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0969939777428308E-7). Exiting and using xold. Value=-2144.3341805750665
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.0969953463986683E-7). Exiting and using xold. Value=-2144.3108747326874
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4368848749528587E-7). Exiting and using xold. Value=-2093.4938465503615
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3244393529903407E-7). Exiting and using xold. Value=-2092.803864944791
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.3894931557612676E-7). Exiting and using xold. Value=-2093.3777401864063
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4315003132048277E-7). Exiting and using xold. Value=-2093.387824165436
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.4187407180377708E-7). Exiting and using xold. Value=-2093.159043819419
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.9312003235015398E-7). Exiting and using xold. Value=-1685.172654004064
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.77202117986396E-7). Exiting and using xold. Value=-1679.5988884100618
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.8552769055124423E-7). Exiting and using xold. Value=-1684.2385025596627
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.935950766228685E-7). Exiting and using xold. Value=-1684.306476756166
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)


EXITING BACKTRACK: Jump too small (alamin=1.939434865930708E-7). Exiting and using xold. Value=-1682.4565271831307
cc.mallet.optimize.OptimizationException: Line search could not step in the current direction. (This is not necessarily cause for alarm. Sometimes this happens close to the maximum, where the function may be very flat.)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:148)
	at cc.mallet.optimize.LimitedMemoryBFGS.optimize(LimitedMemoryBFGS.java:94)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:274)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:242)
	at cc.mallet.classify.MaxEntTrainer.train(MaxEntTrainer.java:52)
	at put.mlc.classifiers.common.MalletClassifier.buildClassifier(MalletClassifier.java:177)
	at put.mlc.classifiers.common.TunedClassifier.test(TunedClassifier.java:122)
	at put.mlc.classifiers.common.TunedClassifier.tune(TunedClassifier.java:94)
	at put.mlc.classifiers.common.TunedClassifier.buildClassifier(TunedClassifier.java:155)
	at weka.classifiers.meta.FilteredClassifier.buildClassifier(FilteredClassifier.java:396)
	at put.mlc.classifiers.efp.EFP.buildInternal(EFP.java:139)
	at mulan.classifier.MultiLabelLearnerBase.build(MultiLabelLearnerBase.java:78)
	at put.mlc.experiments.GeneralExperiment.evaluation(GeneralExperiment.java:75)
	at put.mlc.experiments.Experiment.evaluation(Experiment.java:111)
	at put.mlc.examples.experiments.DemoExperiment.main(DemoExperiment.java:56)










































































